#include <stdlib.h>
#include <math.h>
#include <GL/glut.h>

void setPixel (GLint xCoord,GLint yCoord)
{
	glBegin(GL_POINTS);
		glVertex2i(xCoord,yCoord);
	glEnd();
}

inline int round (const float a) {return int (a+0.5);}

void lineDDA (void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3i(1,0,0);
	int x0=180, int y0=15, int xEnd=10, int yEnd=145;
	int dx = xEnd - x0 ,dy = yEnd - y0, steps, k;
	float xIncrement ,yIncrement, x = x0, y = y0;

	if (fabs (dx)>fabs (dy))
		steps = fabs (dx);
	else
		steps = fabs (dy);
	xIncrement= float (dx) / float (steps);
	yIncrement= float (dy) / float (steps);

	setPixel (round (x),round (y));
	for (k =0; k < steps; k++)
	{
		x += xIncrement;
		y += yIncrement;
		setPixel (round (x),round (y));
	}
	glFlush();
}

void init (void)
{
	glClearColor (1,1,1,0);
	
	gluOrtho2D(0,200,0,150);
}

void main (int argc, char** argv)
{
	glutInit (&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowPosition(20,100);
	glutInitWindowSize(400,300);
	glutCreateWindow("An Example");

	init();
	glutDisplayFunc(lineDDA);
	glutMainLoop();
}
