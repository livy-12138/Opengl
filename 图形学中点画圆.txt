#include <stdlib.h>
#include <math.h>
#include <GL/glut.h>

void setPixel (GLint xCoord,GLint yCoord)
{
	glBegin(GL_POINTS);
		glVertex2i(xCoord,yCoord);
	glEnd();
}
void init (void)
{
	glClearColor (1,1,1,0);	
	gluOrtho2D(0,810,0,810);
}
class screenPt
{
private:
	GLint x,y;
public:
	screenPt()
	{
		x=y=0;
	}
	void setCoords(GLint xCoordValue,GLint yCoordValue)
	{
		x=xCoordValue;
		y=yCoordValue;
	}
	GLint getx()const{
		return x;
	}
	GLint gety()const{
		return y;
	}
	void incrementx(){
		x++;
	}
	void decrementy(){
		y--;
	}
};
void circleMidpoint(void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0,0,0);
	screenPt circPt;
	GLint xc=400;
	GLint yc=400;
	GLint radius=400;
	GLint p=1-radius;

	circPt.setCoords(0,radius);

	void circlePlotPoints(GLint,GLint,screenPt);

	circlePlotPoints(xc,yc,circPt);

	while(circPt.getx()<circPt.gety())
	{
		circPt.incrementx();
		if(p<0)
			p+=2*circPt.getx()+1;
		else
		{
			circPt.decrementy();
			p+=2*(circPt.getx()-circPt.gety())+1;
		}
		circlePlotPoints(xc,yc,circPt);
	}
	glFlush();
}

void circlePlotPoints (GLint xc,GLint yc,screenPt circPt)
{
	setPixel(xc+circPt.getx(),yc+circPt.gety());
	setPixel(xc-circPt.getx(),yc+circPt.gety());
	setPixel(xc+circPt.getx(),yc-circPt.gety());
	setPixel(xc-circPt.getx(),yc-circPt.gety());
	setPixel(xc+circPt.gety(),yc+circPt.getx());
	setPixel(xc-circPt.gety(),yc+circPt.getx());
	setPixel(xc+circPt.gety(),yc-circPt.getx());
	setPixel(xc-circPt.gety(),yc-circPt.getx());
}


void main (int argc, char** argv)
{
	glutInit (&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowPosition(20,100);
	glutInitWindowSize(810,810);
	glutCreateWindow("An Example");

	init();
	glutDisplayFunc(circleMidpoint);
	glutMainLoop();
}
